// AI Sports Edge Build and Deploy Script
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// Set environment to production
process.env.NODE_ENV = 'production';

console.log('Building application...');

try {
  // Create a custom build instead of using the standard build command
  // This avoids the Metro bundler issues with Node.js modules like 'fs'
  console.log('Creating build directory...');
  if (!fs.existsSync('build')) {
    fs.mkdirSync('build');
  }

  // Copy the necessary files
  console.log('Copying files...');

  // Create the HTML files
  const indexHtml = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AI Sports Edge</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div id="root"></div>
  <script src="bundle.js"></script>
</body>
</html>
`;
  fs.writeFileSync(path.join('build', 'index.html'), indexHtml);

  // Create a simple CSS file
  const css = `
body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #121212;
  color: #ffffff;
  margin: 0;
  padding: 0;
}

.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: 20px;
}

.login-form-container {
  background-color: #1e1e1e;
  border-radius: 10px;
  padding: 30px;
  width: 100%;
  max-width: 400px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.login-logo {
  text-align: center;
  margin-bottom: 30px;
}

.login-logo img {
  width: 80px;
  height: 80px;
  margin-bottom: 15px;
}

.login-logo h1 {
  font-size: 24px;
  color: #0066FF;
  margin: 0;
}

.login-form {
  width: 100%;
}

.form-group {
  margin-bottom: 20px;
}

.form-group label {
  display: block;
  margin-bottom: 8px;
  font-size: 14px;
  color: #cccccc;
}

.form-group input {
  width: 100%;
  padding: 12px;
  border: 1px solid #333;
  border-radius: 6px;
  background-color: #333;
  color: #fff;
  font-size: 16px;
  box-sizing: border-box;
}

.login-button {
  width: 100%;
  padding: 12px;
  background-color: #0066FF;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  margin-top: 10px;
}

.login-button:hover {
  background-color: #0055CC;
}

.login-links {
  margin-top: 20px;
  text-align: center;
}

.login-links a {
  color: #0066FF;
  text-decoration: none;
  font-size: 14px;
}

.login-links a:hover {
  text-decoration: underline;
}

.login-error {
  background-color: rgba(255, 59, 48, 0.1);
  color: #FF3B30;
  padding: 10px;
  border-radius: 6px;
  margin-bottom: 20px;
  font-size: 14px;
}

.login-success {
  background-color: rgba(52, 199, 89, 0.1);
  color: #34C759;
  padding: 10px;
  border-radius: 6px;
  margin-bottom: 20px;
  font-size: 14px;
}
`;
  fs.writeFileSync(path.join('build', 'styles.css'), css);

  // Create a placeholder bundle.js
  const bundleJs = `
// This is a placeholder for the actual bundle
// In a real deployment, this would be generated by webpack
console.log('AI Sports Edge application loaded');

// Simple routing system
const routes = {
  '/': () => showLoginPage(),
  '/login': () => showLoginPage(),
  '/signup': () => showSignupPage(),
  '/forgot-password': () => showForgotPasswordPage(),
};

// Initialize the app
function init() {
  const path = window.location.hash.substring(1) || '/';
  const route = routes[path] || routes['/'];
  route();
}

// Show login page
function showLoginPage() {
  document.getElementById('root').innerHTML = \`
    <div class="login-container">
      <div class="login-form-container">
        <div class="login-logo">
          <img src="https://ai-sports-edge-com.web.app/assets/logo.png" alt="AI Sports Edge Logo" />
          <h1>Login to AI Sports Edge</h1>
        </div>
        <form class="login-form" id="login-form">
          <div class="form-group">
            <label for="email">Email</label>
            <input id="email" type="email" required />
          </div>
          <div class="form-group">
            <label for="password">Password</label>
            <input id="password" type="password" required />
          </div>
          <button type="submit" class="login-button">Login</button>
          <div class="login-links">
            <a href="#/forgot-password">Forgot password?</a>
            <br /><br />
            <a href="#/signup">Don't have an account? Sign up</a>
          </div>
        </form>
      </div>
    </div>
  \`;
  
  document.getElementById('login-form').addEventListener('submit', (e) => {
    e.preventDefault();
    alert('Login functionality will be implemented in the full version');
  });
}

// Show signup page
function showSignupPage() {
  document.getElementById('root').innerHTML = \`
    <div class="login-container">
      <div class="login-form-container">
        <div class="login-logo">
          <img src="https://ai-sports-edge-com.web.app/assets/logo.png" alt="AI Sports Edge Logo" />
          <h1>Create Account</h1>
        </div>
        <form class="login-form" id="signup-form">
          <div class="form-group">
            <label for="signup-email">Email</label>
            <input id="signup-email" type="email" required />
          </div>
          <div class="form-group">
            <label for="signup-password">Password</label>
            <input id="signup-password" type="password" required />
          </div>
          <div class="form-group">
            <label for="confirm-password">Confirm Password</label>
            <input id="confirm-password" type="password" required />
          </div>
          <button type="submit" class="login-button">Sign Up</button>
          <div class="login-links">
            <a href="#/login">Already have an account? Sign in</a>
          </div>
        </form>
      </div>
    </div>
  \`;
  
  document.getElementById('signup-form').addEventListener('submit', (e) => {
    e.preventDefault();
    alert('Signup functionality will be implemented in the full version');
  });
}

// Show forgot password page
function showForgotPasswordPage() {
  document.getElementById('root').innerHTML = \`
    <div class="login-container">
      <div class="login-form-container">
        <div class="login-logo">
          <img src="https://ai-sports-edge-com.web.app/assets/logo.png" alt="AI Sports Edge Logo" />
          <h1>Reset Password</h1>
        </div>
        <form class="login-form" id="reset-form">
          <div class="form-group">
            <label for="reset-email">Email</label>
            <input id="reset-email" type="email" required />
          </div>
          <button type="submit" class="login-button">Send Reset Email</button>
          <div class="login-links">
            <a href="#/login">Back to login</a>
          </div>
        </form>
      </div>
    </div>
  \`;
  
  document.getElementById('reset-form').addEventListener('submit', (e) => {
    e.preventDefault();
    alert('Password reset functionality will be implemented in the full version');
  });
}

// Listen for hash changes
window.addEventListener('hashchange', init);

// Initialize the app when the page loads
window.addEventListener('load', init);
`;
  fs.writeFileSync(path.join('build', 'bundle.js'), bundleJs);

  // Create signup.html that redirects to the main app with the signup route
  const signupHtml = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AI Sports Edge - Sign Up</title>
  <script>
    window.location.href = '/#/signup';
  </script>
</head>
<body>
  <p>Redirecting to signup page...</p>
</body>
</html>
`;
  fs.writeFileSync(path.join('build', 'signup.html'), signupHtml);

  // Create login.html that redirects to the main app with the login route
  const loginHtml = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AI Sports Edge - Login</title>
  <script>
    window.location.href = '/#/login';
  </script>
</head>
<body>
  <p>Redirecting to login page...</p>
</body>
</html>
`;
  fs.writeFileSync(path.join('build', 'login.html'), loginHtml);

  console.log('Preparing files for deployment...');
  // Create a deploy directory if it doesn't exist
  const deployDir = path.join(__dirname, 'deploy');
  if (!fs.existsSync(deployDir)) {
    fs.mkdirSync(deployDir);
  }

  // Copy build files to deploy directory
  fs.readdirSync('build').forEach(file => {
    fs.copyFileSync(path.join('build', file), path.join(deployDir, file));
  });

  console.log('Deployment files prepared successfully!');
} catch (error) {
  console.error('Build failed:', error);
  process.exit(1);
}
