feat: Add comprehensive code analysis tools

Implements a suite of analysis and tracking tools for the AI Sports Edge project:

1. Progress Backfilling System
   - Core progress tracking with checkpointing and resumable operations
   - Integration with duplicate detection tools
   - CLI interface for duplicate detection with progress tracking

2. Historical Code Analysis System
   - Git repository analysis with feature and contributor tracking
   - File lifecycle and development pattern analysis
   - CLI interface with resumable operations

3. Complete Analysis System
   - Integration of Progress Backfilling and Historical Analysis
   - Combined insights and unified reporting
   - Customizable analysis options

Added files:
- scripts/roo-duplicates.js
- scripts/roo-history-analyze.js
- scripts/roo-complete-analysis.js
- scripts/test-analysis-tools.sh
- scripts/setup-roocode-structure.sh
- docs/progress-backfilling-system.md
- docs/historical-code-analysis-system.md
- docs/complete-analysis-system.md
- .roocode/README.md
- .github/workflows/code-analysis.yml

This implementation provides immediate value for code quality analysis, 
development pattern tracking, and workflow automation. It integrates 
seamlessly with existing systems and provides a foundation for future 
enhancements.